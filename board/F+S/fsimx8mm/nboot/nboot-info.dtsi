// SPDX-License-Identifier: GPL-2.0+
/*
 * Copyright (C) 2023 F&S Elektronik Systeme GmbH
 *
 * This file contains generic NBoot parameters that are included in every
 * BOARD-CFG file. So keep the set as small as possible. It is used by SPL and
 * U-Boot. It adds some generic information to the board-cfg node and adds a
 * new node nboot-info. This node contains the flash layout. It tells where
 * every part of the system is stored. There is an own layout for every type of
 * supported flash.
 *
 *   SPL:     First stage boot loader, stored separately as required by the
 *            ROM loader
 *   NBOOT:   A reduced subset of the NBOOT image consisting only of the
 *            BOARD-CFG and the FIRMWARE part
 *   U-BOOT:  The regular boot loader
 *   ENV:     The U-Boot environment
 *
 * The file is processed by the C pre-processor, so you can use macros. But
 * note that the angle brackets < and > need a separating blank in that case.
 */

#include <config.h>			/* CONFIG_* */

/ {
	board-cfg {
		/* Add dynamic entries to board-cfg node */
		board-cfg = BOARD_CFG_NAME;
		board-rev = < BOARD_REV >;

		/*
		 * Increment if there are changes in BOARD-CFG structure
		 *  1: Legacy images with either mmc or nand settings
		 *  2: Flash settings in sub-nodes: emmc-boot, sd-user, nand;
		 *     added board-cfg name, moved board-cfg-version here;
		 *     use SECURE and/or CRC32 flags on some FS-Headers
		 */
		board-cfg-version = <2>;
	};

	nboot-info {
		version = NBOOT_VERSION;

		/* NBoot capabilities */
		support-crc32;
		save-board-id;
		uboot-with-fsh;

		/*
		 * Settings for NAND. All values must be aligned to NAND erase
		 * blocks (0x20000 bytes = 128 KiB), only the env-size entry
		 * may be smaller and only needs to be aligned to NAND page
		 * size (0x800 bytes = 2 KiB).
		 */
		 nand {
		 	/*
			 * NAND flash layout
			 * -----------------
			 * NBoot planned when U-Boot can write SPL/FCB/DBBT:
 			 * 0x0000_0000: BCB 0 (FCB+DBBT) (128 KiB)
			 * 0x0002_0000: BCB 1 (FCB+DBBT) (128 KiB)
			 * 0x0004_0000: SPL 0 (256 KiB)
			 * 0x0008_0000: SPL 1 (256 KiB)
			 * 0x000C_0000: - (bad blocks, 256 KiB)
			 * 0x0010_0000: NBOOT A (1536 KiB)
			 * 0x0028_0000: NBOOT B (1536 KiB)
			 *
			 * NBoot actually now when SPL/FCB/DBBT/HDMI is written
			 * by NXP's kobs:
			 * 0x0000_0000: FCB 0 (128 KiB, defined by kobs)
			 * 0x0002_0000: FCB 1 (128 KiB, defines by kobs)
			 * 0x0004_0000: FCB 2 (128 KiB, defined by kobs)
			 * 0x0006_0000: FCB 3 (128 KiB, defined by kobs)
			 * 0x0008_0000: DBBT 0 (128 KiB, defined by kobs)
			 * 0x000A_0000: DBBT 1 (128 KiB, defined by kobs)
			 * 0x000C_0000: DBBT 2 (128 KiB, defined by kobs)
			 * 0x000E_0000: DBBT 3 (128 KiB, defined by kobs)
			 * 0x0010_0000: SPL 0 (256 KiB, defined by FCB/kobs)
			 * 0x0014_0000: HDMI-FW 0 (256 KiB, unused, but written)
			 * 0x0018_0000: NBOOT A (1024 KiB)
			 * 0x0028_0000: SPL 1 (256 KiB, defined by FCB/kobs)
			 * 0x002C_0000: HDMI-FW 1 (256 KiB, unused, but written)
			 * 0x0030_0000: NBOOT B (1024 KiB)
			 *
			 * Common part after NBoot:
			 * 0x0040_0000: Refresh (512 KiB)
			 * 0x0048_0000: UBootEnv (256 KiB)
			 * 0x004C_0000: UBootEnvRed (256 KiB)
			 * 0x0050_0000: UBoot A (3 MiB)
			 * 0x0080_0000: UBoot B (3 MiB)
			 * 0x00B0_0000: Further MTD partitions (see fsimx8mm.h)
			 */
			spl-start = <0x00100000 0x00280000>;
			spl-size = <0x00040000>;		/* 256 KiB */
			nboot-start = < CONFIG_FUS_BOARDCFG_NAND0
					CONFIG_FUS_BOARDCFG_NAND1 >;
			nboot-size = <0x00100000>;		/* 1 MiB */
			uboot-start = <0x00500000 0x00800000>;
			uboot-size = <0x00300000>;		/* 3 MiB */
			/* Also see CONFIG_ENV_NAND_OFFSET[_REDUND] */
			env-start = <0x00480000 0x004c0000>;
			env-size = < CONFIG_ENV_SIZE >;		/* 16 KiB */
			env-range = <0x00040000>;		/* 256 KiB */
		};

		/*
		 * Settings for eMMC/SD.
		 *
		 * There are two settings. One is when booting from eMMC boot1
		 * or boot2 partition and one is when booting from the User
		 * partition of an eMMC or from an SD card. You can set this
		 * with U-Boot command "mmc partconf".
		 *
		 * Keep both settings as similar as possible. All values must
		 * be aligned to sectors (0x200 = 512 bytes), better even to
		 * Linux pages (0x1000 = 4096 bytes). The settings assume an
		 * 8 MiB reserved area at the beginning of the User partition.
		 */
		emmc-boot {
			/*
			 * Both copies of SPL, NBOOT and ENV are stored in the
			 * boot partition we boot from. U-Boot is stored in the
			 * User partiton. The layout is actually the same as
			 * for the User partition.
			 *
			 * Boot-Partition 1 or 2
			 * ---------------------
			 * 0x0000_0000: - (free, 32 KiB, originally for GPT)
			 * 0x0000_8000: - (free, 512 B, originally for MBR)
			 * 0x0000_8200: Secondary Image Table (512 B)
			 * 0x0000_8400: SPL Copy 0 (223 KiB)
			 * 0x0004_0000: NBOOT Copy 0 (768 KiB)
			 * 0x0010_0000: UBootEnv (16 KiB)
			 * 0x0010_4000: UBootEnvRed (16 KiB)
			 * 0x0010_8000: - (free, 1 KiB)
			 * 0x0010_8400: SPL Copy 1 (223 KiB)
			 * 0x0014_0000: NBOOT Copy 0 (768 KiB)
			 * 0x0020_0000: - (free, to end of partition)
			 *
			 * User HW-Partition:
			 * 0x0000_0000: --- (free, space for GPT, 32 KiB)
			 * 0x0000_8000: --- (free, 1248 KiB; UserDef/M4?)
			 * 0x0020_0000: U-Boot A (3 MiB)
			 * 0x0050_0000: U-Boot B (3 MiB)
			 * 0x0080_0000: End of reserved area
			 */
			spl-start = <0x00008400 0x00108400>;
			spl-size = <0x00037c00>;		/* 223 KiB */
			nboot-start = < CONFIG_FUS_BOARDCFG_MMC0
					CONFIG_FUS_BOARDCFG_MMC1 >;
			nboot-size = <0x000c0000>;		/* 768 KiB */
			uboot-start = <0x00200000 0x00500000>;
			uboot-size = <0x00300000>;		/* 3 MiB */
			/* Also see CONFIG_ENV_MMC_OFFSET[_REDUND] */
			env-start = <0x00100000 0x00104000>;
			env-size = < CONFIG_ENV_SIZE >;		/* 16 KiB */
		};

		sd-user {
			/*
			 * User-Partition/SD-Card
			 * ----------------------
			 * 0x0000_0000: - (free, 32 KiB, originally for GPT)
			 * 0x0000_8000: - (free, 512 B, originally for MBR)
			 * 0x0000_8200: Secondary Image Table (512 B)
			 * 0x0000_8400: SPL Copy 0 (223 KiB)
			 * 0x0004_0000: NBOOT Copy 0 (768 KiB)
			 * 0x0010_0000: UBootEnv (16 KiB)
			 * 0x0010_4000: UBootEnvRed (16 KiB)
			 * 0x0010_8000: - (free, 1 KiB)
			 * 0x0010_8400: SPL Copy 1 (223 KiB)
			 * 0x0014_0000: NBOOT Copy 0 (768 KiB)
			 * 0x0020_0000: U-Boot A (3 MiB)
			 * 0x0050_0000: U-Boot B (3 MiB)
			 * 0x0080_0000: End of reserved area
			 */
			spl-start = <0x00008400 0x00108400>;
			spl-size = <0x00037c00>;		/* 223 KiB */
			nboot-start = < CONFIG_FUS_BOARDCFG_MMC0
					CONFIG_FUS_BOARDCFG_MMC1 >;
			nboot-size = <0x000c0000>;		/* 768 KiB */
			uboot-start = <0x00200000 0x00500000>;
			uboot-size = <0x00300000>;		/* 3 MiB */
			/* Also see CONFIG_ENV_MMC_OFFSET[_REDUND] */
			env-start = < 0x00100000 0x00104000 >;
			env-size = < CONFIG_ENV_SIZE >;		/* 16 KiB */
		};
	};
};
